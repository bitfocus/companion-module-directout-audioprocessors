/**
 * These tables are used to generate the possible choices for inputs and outputs and translate the IO numbers to IDs and labels
 * @property type - channeltype
 * @property slotid - internal id for slot
 * @property slotlabel - Label to show for slot
 * @property slotlabelpath - Path where the label for the slot can be found
 * @property chid - internal id for channel
 * @property chlabel - Default label to show for channel
 * @property chlabelpath - Path where the label for the channel can be found
 * @property index - numerical index of channel in list at the device
 */

import { Capabilities, DeviceTable } from './types.js'

const PICKOFFNUM = 5
const PICKOFFLABELS_OI = ['O:4/I:F', 'O:3/I:4', 'O:2/I:3', 'O:1/I:2', 'O:F/I:1']
const PICKOFFLABELS_O = ['4', '3', '2', '1', 'F']

const generator = [
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 1, chlabel: `BLDS`, index: 0 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 3, chlabel: `Sine Tone 1`, index: 2 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 4, chlabel: `Sine Tone 2`, index: 3 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 5, chlabel: `White Noise 1`, index: 4 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 6, chlabel: `White Noise 2`, index: 5 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 7, chlabel: `Pink Noise 1`, index: 6 },
	{ type: 'src', slotid: 'gen', slotlabel: 'Generator', chid: 8, chlabel: `Pink Noise 2`, index: 7 },
]

export const unassigned = { type: 'src', slotid: 'gen', slotlabel: '', chid: -1, chlabel: `Unassigned`, index: -1 }

export const tables: Capabilities = {
	unassigned: {
		GENERIC: [{ type: 'src', slotid: 'gen', slotlabel: '', chid: -1, chlabel: `Unassigned`, index: -1 }],
	},
	generatorSources: {
		'PRODIGY.MC': Array.from(generator, (ch) => ({ ...ch, ...{ index: ch.index + 448 } })),
		'PRODIGY.MP': Array.from(generator, (ch) => ({ ...ch, ...{ index: ch.index + 448 } })),
		'PRODIGY.MX': Array.from(generator, (ch) => ({ ...ch, ...{ index: ch.index + 1664 } })),
		'MAVEN.A': Array.from(generator, (ch) => ({ ...ch, ...{ index: ch.index + 800 } })),
	},

	sourceTable: {
		'PRODIGY.MC': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/input_slot_name/8',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/input_slot_name/9',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${64 + i}`,
				index: 64 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'src',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/input_slot_name/10',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${128 + i}`,
				index: 128 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/input_slot_name/0',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${384 + i}`,
				index: 384 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/input_slot_name/1',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${392 + i}`,
				index: 392 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot3',
				slotlabel: 'Slot 3',
				slotlabelpath: '/settings/input_slot_name/2',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${400 + i}`,
				index: 400 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot4',
				slotlabel: 'Slot 4',
				slotlabelpath: '/settings/input_slot_name/3',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${408 + i}`,
				index: 408 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot5',
				slotlabel: 'Slot 5',
				slotlabelpath: '/settings/input_slot_name/4',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${416 + i}`,
				index: 416 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot6',
				slotlabel: 'Slot 6',
				slotlabelpath: '/settings/input_slot_name/5',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${424 + i}`,
				index: 424 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot7',
				slotlabel: 'Slot 7',
				slotlabelpath: '/settings/input_slot_name/6',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${432 + i}`,
				index: 432 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot8',
				slotlabel: 'Slot 8',
				slotlabelpath: '/settings/input_slot_name/7',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${440 + i}`,
				index: 440 + i,
			})),
		],
		'PRODIGY.MP': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/input_slot_name/8',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/input_slot_name/9',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${64 + i}`,
				index: 64 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'src',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/input_slot_name/10',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${128 + i}`,
				index: 128 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'src',
				slotid: 'net2',
				slotlabel: 'Net 2',
				slotlabelpath: '/settings/input_slot_name/11',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${256 + i}`,
				index: 256 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/input_slot_name/0',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${384 + i}`,
				index: 384 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/input_slot_name/1',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${392 + i}`,
				index: 392 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot3',
				slotlabel: 'Slot 3',
				slotlabelpath: '/settings/input_slot_name/2',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${400 + i}`,
				index: 400 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot4',
				slotlabel: 'Slot 4',
				slotlabelpath: '/settings/input_slot_name/3',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${408 + i}`,
				index: 408 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/input_slot_name/0',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net2',
				slotlabel: 'Net 2',
				slotlabelpath: '/settings/input_slot_name/1',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${256 + i}`,
				index: 256 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net3',
				slotlabel: 'Net 3',
				slotlabelpath: '/settings/input_slot_name/2',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${512 + i}`,
				index: 512 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net4',
				slotlabel: 'Net 4',
				slotlabelpath: '/settings/input_slot_name/3',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${768 + i}`,
				index: 768 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net5',
				slotlabel: 'Net 5',
				slotlabelpath: '/settings/input_slot_name/4',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${1024 + i}`,
				index: 1024 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net6',
				slotlabel: 'Net 6',
				slotlabelpath: '/settings/input_slot_name/5',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${1280 + i}`,
				index: 1280 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/input_slot_name/6',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${1536 + i}`,
				index: 1536 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/input_slot_name/7',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${1600 + i}`,
				index: 1600 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'src',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/input_slot_name/0',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/input_slot_name/1',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${512 + i}`,
				index: 512 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'src',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/input_slot_name/2',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${576 + i}`,
				index: 576 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/input_slot_name/3',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${768 + i}`,
				index: 768 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'src',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/input_slot_name/4',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/input_labels/${776 + i}`,
				index: 776 + i,
			})),
		],
	},

	sourceDspTable: {
		'PRODIGY.MC': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'inmng1',
				slotlabel: 'In Mng',
				chid: i + 1,
				chlabel: `#${i + 1}`,
				chlabelpath: `/settings/input_manager/${i}/label`,
				index: 992 + i,
			})),
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus',
				slotlabel: 'Sum Bus',
				chid: i + 1,
				chlabel: `#${i + 1}`,
				chlabelpath: `/settings/sum_bus_master/${i}/label`,
				index: 480 + i,
			})),
		],
		'PRODIGY.MP': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'inmng1',
				slotlabel: 'In Mng',
				chid: i + 1,
				chlabel: `#${i + 1}`,
				chlabelpath: `/settings/input_manager/${i}/label`,
				index: 992 + i,
			})),
			...Array.from({ length: 32 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'flexch1',
				slotlabel: 'Flex Channels',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_OI[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/flex_channel/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 512 + i,
			})),
			...Array.from({ length: 8 * 4 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: `mtx${Math.floor(i / (PICKOFFNUM * 4)) + 1}`,
				slotlabel: `MTX${Math.floor(i / (PICKOFFNUM * 4)) + 1} (16x4)`,
				slotlabelpath: `/settings/mixer/${Math.floor(i / (PICKOFFNUM * 4)) * 4 + 3}/label`, // 3, 7, 11, 15...
				chid: `${(Math.floor(i / PICKOFFNUM) % 4) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `Master ${String.fromCharCode(65 + (Math.floor(i / PICKOFFNUM) % 4))} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/mixer/${Math.floor(i / (PICKOFFNUM * 4)) * 4 + 3}/master/${Math.floor(i / PICKOFFNUM) % 4}/label`,
				index: 1144 + Math.floor(i / (PICKOFFNUM * 4)) * 160 + (i % (4 * PICKOFFNUM)), // 1024 is start of all mtx but numbering follows the internal mixer # and not the shown
			})),
			...Array.from({ length: 8 * 8 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: `mtx${Math.floor(i / (PICKOFFNUM * 8)) + 9}`,
				slotlabel: `MTX${Math.floor(i / (PICKOFFNUM * 8)) + 9} (8x8)`,
				slotlabelpath: `/settings/mixer/${Math.floor(i / (PICKOFFNUM * 8)) * 4}/label`, // 0, 4, 8, 12...
				chid: `${(Math.floor(i / PICKOFFNUM) % 8) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `Master ${String.fromCharCode(65 + (Math.floor(i / PICKOFFNUM) % 8))} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/mixer/${Math.floor(i / (PICKOFFNUM * 8)) * 4}/master/${Math.floor(i / PICKOFFNUM) % 8}/label`,
				index: 1024 + Math.floor(i / (PICKOFFNUM * 8)) * 160 + (i % (8 * PICKOFFNUM)), // 1024 is start of all mtx but numbering follows the internal mixer # and not the shown
			})),
			...Array.from({ length: 32 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/sum_bus_master/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 4096 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'inmng1',
				slotlabel: 'In Mng',
				chid: i + 1,
				chlabel: `#${i + 1}`,
				chlabelpath: `/settings/input_manager/${i}/label`,
				index: 3008 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'flexch1',
				slotlabel: 'Flex Channels',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_OI[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/flex_channel/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2368 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: `mtx1`,
				slotlabel: `MTX (64x64)`,
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `MatMix${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/mixer64x64/master/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2048 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/sum_bus_master/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2688 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'inmng1',
				slotlabel: 'In Mng',
				chid: i + 1,
				chlabel: `#${i + 1}`,
				chlabelpath: `/settings/input_manager/${i}/label`,
				index: 3008 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'flexch1',
				slotlabel: 'Flex Channels',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_OI[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/flex_channel/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2048 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: `mtx1`,
				slotlabel: `MTX (64x64)`,
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `MatMix${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/mixer64x64/master/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2368 + i,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: `${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
				chlabel: `#${Math.floor(i / PICKOFFNUM) + 1} ${PICKOFFLABELS_O[i % PICKOFFNUM]}`,
				chlabelpath: `/settings/sum_bus_master/${Math.floor(i / PICKOFFNUM)}/label`,
				index: 2688 + i,
			})),
		],
	},

	sinkTable: {
		'PRODIGY.MC': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/slot_name/8',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/slot_name/9',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${64 + i}`,
				index: 64 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'snk',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/slot_name/10',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${128 + i}`,
				index: 128 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/slot_name/0',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${384 + i}`,
				index: 384 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/slot_name/1',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${392 + i}`,
				index: 392 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot3',
				slotlabel: 'Slot 3',
				slotlabelpath: '/settings/slot_name/2',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${400 + i}`,
				index: 400 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot4',
				slotlabel: 'Slot 4',
				slotlabelpath: '/settings/slot_name/3',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${408 + i}`,
				index: 408 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot5',
				slotlabel: 'Slot 5',
				slotlabelpath: '/settings/slot_name/4',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${416 + i}`,
				index: 416 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot6',
				slotlabel: 'Slot 6',
				slotlabelpath: '/settings/slot_name/5',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${424 + i}`,
				index: 424 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot7',
				slotlabel: 'Slot 7',
				slotlabelpath: '/settings/slot_name/6',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${432 + i}`,
				index: 432 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot8',
				slotlabel: 'Slot 8',
				slotlabelpath: '/settings/slot_name/7',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${440 + i}`,
				index: 440 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones1',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph1 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${448 + i}`,
				index: 448 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones2',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph2 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${450 + i}`,
				index: 450 + i,
			})),
		],
		'PRODIGY.MP': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/slot_name/8',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/slot_name/9',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${64 + i}`,
				index: 64 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'snk',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/slot_name/10',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${128 + i}`,
				index: 128 + i,
			})),
			...Array.from({ length: 128 }, (_, i) => ({
				type: 'snk',
				slotid: 'net2',
				slotlabel: 'Net 2',
				slotlabelpath: '/settings/slot_name/11',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${256 + i}`,
				index: 256 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/slot_name/0',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${384 + i}`,
				index: 384 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/slot_name/1',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${392 + i}`,
				index: 392 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot3',
				slotlabel: 'Slot 3',
				slotlabelpath: '/settings/slot_name/2',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${400 + i}`,
				index: 400 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot4',
				slotlabel: 'Slot 4',
				slotlabelpath: '/settings/slot_name/3',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${408 + i}`,
				index: 408 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones1',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph1 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${448 + i}`,
				index: 448 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones2',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph2 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${450 + i}`,
				index: 450 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/slot_name/0',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net2',
				slotlabel: 'Net 2',
				slotlabelpath: '/settings/slot_name/1',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${256 + i}`,
				index: 256 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net3',
				slotlabel: 'Net 3',
				slotlabelpath: '/settings/slot_name/2',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${512 + i}`,
				index: 512 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net4',
				slotlabel: 'Net 4',
				slotlabelpath: '/settings/slot_name/3',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${768 + i}`,
				index: 768 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net5',
				slotlabel: 'Net 5',
				slotlabelpath: '/settings/slot_name/4',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1024 + i}`,
				index: 1024 + i,
			})),
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net6',
				slotlabel: 'Net 6',
				slotlabelpath: '/settings/slot_name/5',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1280 + i}`,
				index: 1280 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/slot_name/6',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1536 + i}`,
				index: 1536 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/slot_name/7',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1600 + i}`,
				index: 1600 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones1',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph1 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1664 + i}`,
				index: 1664 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones2',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph2 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${1666 + i}`,
				index: 1666 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 256 }, (_, i) => ({
				type: 'snk',
				slotid: 'net1',
				slotlabel: 'Net 1',
				slotlabelpath: '/settings/output_slot_name/4',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${0 + i}`,
				index: 0 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi1',
				slotlabel: 'MADI 1',
				slotlabelpath: '/settings/output_slot_name/2',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${512 + i}`,
				index: 512 + i,
			})),
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snk',
				slotid: 'madi2',
				slotlabel: 'MADI 2',
				slotlabelpath: '/settings/output_slot_name/3',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${576 + i}`,
				index: 576 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot1',
				slotlabel: 'Slot 1',
				slotlabelpath: '/settings/output_slot_name/0',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${768 + i}`,
				index: 768 + i,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snk',
				slotid: 'slot2',
				slotlabel: 'Slot 2',
				slotlabelpath: '/settings/output_slot_name/1',
				chid: i + 1,
				chlabel: `Out ${i + 1}`,
				chlabelpath: `/settings/output_labels/${776 + i}`,
				index: 776 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones1',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph1 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${800 + i}`,
				index: 800 + i,
			})),
			...Array.from({ length: 2 }, (_, i) => ({
				type: 'snk',
				slotid: 'Phones2',
				slotlabel: 'Phones',
				chid: i + 1,
				chlabel: `Ph2 ${i + 1}`,
				chlabelpath: `/settings/output_labels/${802 + i}`,
				index: 802 + i,
			})),
		],
	},

	sinkTableFlex: {
		'PRODIGY.MC': [],
		'PRODIGY.MP': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'flex1',
				slotlabel: 'Flex Channels',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/flex_channel/${0 + i}/label`,
				index: 0 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'flex1',
				slotlabel: 'Flex Channels',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/flex_channel/${0 + i}/label`,
				index: 0 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'flex1',
				slotlabel: 'Flex Channels',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/flex_channel/${0 + i}/label`,
				index: 0 + i,
			})),
		],
	},

	sinkTableMixer: {
		'PRODIGY.MC': [],
		'PRODIGY.MP': [
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx1',
				slotlabel: 'MatMix 1 (16x4)',
				slotlabelpath: `/settings/mixer/3/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/1/source_label/${i}`,
				index: `1/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx1',
				slotlabel: 'MatMix 1 (16x4)',
				slotlabelpath: `/settings/mixer/3/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/2/source_label/${i}`,
				index: `2/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx2',
				slotlabel: 'MatMix 2 (16x4)',
				slotlabelpath: `/settings/mixer/7/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/5/source_label/${i}`,
				index: `5/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx2',
				slotlabel: 'MatMix 2 (16x4)',
				slotlabelpath: `/settings/mixer/7/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/6/source_label/${i}`,
				index: `6/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx3',
				slotlabel: 'MatMix 3 (16x4)',
				slotlabelpath: `/settings/mixer/11/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/9/source_label/${i}`,
				index: `9/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx3',
				slotlabel: 'MatMix 3 (16x4)',
				slotlabelpath: `/settings/mixer/11/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/10/source_label/${i}`,
				index: `10/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx4',
				slotlabel: 'MatMix 4 (16x4)',
				slotlabelpath: `/settings/mixer/15/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/13/source_label/${i}`,
				index: `13/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx4',
				slotlabel: 'MatMix 4 (16x4)',
				slotlabelpath: `/settings/mixer/15/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/14/source_label/${i}`,
				index: `14/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx5',
				slotlabel: 'MatMix 5 (16x4)',
				slotlabelpath: `/settings/mixer/19/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/17/source_label/${i}`,
				index: `17/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx5',
				slotlabel: 'MatMix 5 (16x4)',
				slotlabelpath: `/settings/mixer/19/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/18/source_label/${i}`,
				index: `18/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx6',
				slotlabel: 'MatMix 6 (16x4)',
				slotlabelpath: `/settings/mixer/23/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/21/source_label/${i}`,
				index: `21/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx6',
				slotlabel: 'MatMix 6 (16x4)',
				slotlabelpath: `/settings/mixer/23/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/22/source_label/${i}`,
				index: `22/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx7',
				slotlabel: 'MatMix 7 (16x4)',
				slotlabelpath: `/settings/mixer/27/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/25/source_label/${i}`,
				index: `25/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx7',
				slotlabel: 'MatMix 7 (16x4)',
				slotlabelpath: `/settings/mixer/27/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/26/source_label/${i}`,
				index: `26/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx8',
				slotlabel: 'MatMix 8 (16x4)',
				slotlabelpath: `/settings/mixer/31/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/29/source_label/${i}`,
				index: `29/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx8',
				slotlabel: 'MatMix 8 (16x4)',
				slotlabelpath: `/settings/mixer/31/label`,
				chid: i + 9,
				chlabel: `In ${i + 9}`,
				chlabelpath: `/settings/mixer/30/source_label/${i}`,
				index: `30/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx9',
				slotlabel: 'MatMix 9 (8x8)',
				slotlabelpath: `/settings/mixer/0/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/0/source_label/${i}`,
				index: `0/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx10',
				slotlabel: 'MatMix 10 (8x8)',
				slotlabelpath: `/settings/mixer/4/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/4/source_label/${i}`,
				index: `4/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx11',
				slotlabel: 'MatMix 11 (8x8)',
				slotlabelpath: `/settings/mixer/8/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/8/source_label/${i}`,
				index: `8/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx12',
				slotlabel: 'MatMix 12 (8x8)',
				slotlabelpath: `/settings/mixer/12/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/12/source_label/${i}`,
				index: `12/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx13',
				slotlabel: 'MatMix 13 (8x8)',
				slotlabelpath: `/settings/mixer/16/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/16/source_label/${i}`,
				index: `16/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx14',
				slotlabel: 'MatMix 14 (8x8)',
				slotlabelpath: `/settings/mixer/20/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/20/source_label/${i}`,
				index: `20/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx15',
				slotlabel: 'MatMix 15 (8x8)',
				slotlabelpath: `/settings/mixer/24/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/24/source_label/${i}`,
				index: `24/source_routing/${i}`,
			})),
			...Array.from({ length: 8 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx16',
				slotlabel: 'MatMix 16 (8x8)',
				slotlabelpath: `/settings/mixer/28/label`,
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer/28/source_label/${i}`,
				index: `28/source_routing/${i}`,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx1',
				slotlabel: 'MatMix (64x64)',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer64x64/source_label/${0 + i}/label`,
				index: i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'mtx1',
				slotlabel: 'MatMix (64x64)',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/mixer64x64/source_label/${0 + i}/label`,
				index: i,
			})),
		],
	},

	sinkTableSidechain: {
		'PRODIGY.MC': [],
		'PRODIGY.MP': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'dyn1',
				slotlabel: 'Dyn Side Chain',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				index: 0 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'dyn1',
				slotlabel: 'Dyn Side Chain',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				index: 0 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'snkdsp',
				slotid: 'dyn1',
				slotlabel: 'Dyn Side Chain',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				index: 0 + i,
			})),
		],
	},

	groupsTable: {
		'PRODIGY.MC': [
			...Array.from({ length: 16 }, (_, i) => ({
				type: 'grp',
				slotid: '',
				slotlabel: 'Group',
				chid: i + 1,
				chlabel: `${i + 1}`,
				chlabelpath: `/settings/group/channel/${i}/label`,
				index: 0 + i,
			})),
		],
		'PRODIGY.MP': [
			...Array.from({ length: 16 }, (_, i) => ({
				type: 'grp',
				slotid: '',
				slotlabel: 'Group',
				chid: i + 1,
				chlabel: `${i + 1}`,
				chlabelpath: `/settings/group/channel/${i}/label`,
				index: 0 + i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'grp',
				slotid: '',
				slotlabel: 'Group',
				chid: i + 1,
				chlabel: `${i + 1}`,
				chlabelpath: `/settings/group/channel/${i}/label`,
				index: 0 + i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'grp',
				slotid: '',
				slotlabel: 'Group',
				chid: i + 1,
				chlabel: `${i + 1}`,
				chlabelpath: `/settings/group/channel/${i}/label`,
				index: 0 + i,
			})),
		],
	},

	sourceTableSumbus: {
		'PRODIGY.MC': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/sum_bus_master/${i}/label`,
				index: i,
			})),
		],
		'PRODIGY.MP': [
			...Array.from({ length: 32 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/sum_bus_master/${i}/label`,
				index: i,
			})),
		],
		'PRODIGY.MX': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/sum_bus_master/${i}/label`,
				index: i,
			})),
		],
		'MAVEN.A': [
			...Array.from({ length: 64 }, (_, i) => ({
				type: 'srcdsp',
				slotid: 'sumbus1',
				slotlabel: 'Sum Bus',
				chid: i + 1,
				chlabel: `In ${i + 1}`,
				chlabelpath: `/settings/sum_bus_master/${i}/label`,
				index: i,
			})),
		],
	},

	earsTable: {
		'PRODIGY.MC': [
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1 Input Port', index: 0 },
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2 Input Port', index: 1 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1a', chlabel: '1 A Input Port', index: 2 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1b', chlabel: '1 B Input Port', index: 3 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2a', chlabel: '2 A Input Port', index: 4 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2b', chlabel: '2 B Input Port', index: 5 },
		],
		'PRODIGY.MP': [
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1 Input Port', index: 0 },
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2 Input Port', index: 1 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1a', chlabel: '1 A Input Port', index: 2 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1b', chlabel: '1 B Input Port', index: 3 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2a', chlabel: '2 A Input Port', index: 4 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2b', chlabel: '2 B Input Port', index: 5 },
		],
		'PRODIGY.MX': [
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1a', chlabel: '1 A Input Port', index: 0 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1b', chlabel: '1 B Input Port', index: 1 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1c', chlabel: '1 C Input Port', index: 2 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1d', chlabel: '1 D Input Port', index: 3 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2a', chlabel: '2 A Input Port', index: 4 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2b', chlabel: '2 B Input Port', index: 5 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2c', chlabel: '2 C Input Port', index: 6 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '2d', chlabel: '2 D Input Port', index: 7 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '3a', chlabel: '3 A Input Port', index: 8 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '3b', chlabel: '3 B Input Port', index: 9 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '3c', chlabel: '3 C Input Port', index: 10 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '3d', chlabel: '3 D Input Port', index: 11 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '4a', chlabel: '4 A Input Port', index: 12 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '4b', chlabel: '4 B Input Port', index: 13 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '4c', chlabel: '4 C Input Port', index: 14 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '4d', chlabel: '4 D Input Port', index: 15 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '5a', chlabel: '5 A Input Port', index: 16 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '5b', chlabel: '5 B Input Port', index: 17 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '5c', chlabel: '5 C Input Port', index: 18 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '5d', chlabel: '5 D Input Port', index: 19 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '6a', chlabel: '6 A Input Port', index: 20 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '6b', chlabel: '6 B Input Port', index: 21 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '6c', chlabel: '6 C Input Port', index: 22 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '6d', chlabel: '6 D Input Port', index: 23 },
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1 Input Port', index: 24 },
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2 Input Port', index: 25 },
		],
		'MAVEN.A': [
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1 Input Port', index: 0 },
			{ type: 'ears', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2 Input Port', index: 1 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1a', chlabel: '1 A Input Port', index: 2 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1b', chlabel: '1 B Input Port', index: 3 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1c', chlabel: '1 B Input Port', index: 4 },
			{ type: 'ears', slotid: 'net', slotlabel: 'Net', chid: '1d', chlabel: '1 C Input Port', index: 5 },
		],
	},

	inmngTable: {
		'PRODIGY.MC': Array.from({ length: 32 }, (_, i) => ({
			type: 'srcdsp',
			slotid: 'inmng1',
			slotlabel: 'In Mng',
			chid: i + 1,
			chlabel: `#${i + 1}`,
			chlabelpath: `/settings/input_manager/${i}/label`,
			index: i,
		})),
		'PRODIGY.MP': Array.from({ length: 32 }, (_, i) => ({
			type: 'srcdsp',
			slotid: 'inmng1',
			slotlabel: 'In Mng',
			chid: i + 1,
			chlabel: `#${i + 1}`,
			chlabelpath: `/settings/input_manager/${i}/label`,
			index: i,
		})),
		'PRODIGY.MX': Array.from({ length: 64 }, (_, i) => ({
			type: 'srcdsp',
			slotid: 'inmng1',
			slotlabel: 'In Mng',
			chid: i + 1,
			chlabel: `#${i + 1}`,
			chlabelpath: `/settings/input_manager/${i}/label`,
			index: i,
		})),
		'MAVEN.A': Array.from({ length: 32 }, (_, i) => ({
			type: 'srcdsp',
			slotid: 'inmng1',
			slotlabel: 'In Mng',
			chid: i + 1,
			chlabel: `#${i + 1}`,
			chlabelpath: `/settings/input_manager/${i}/label`,
			index: i,
		})),
	},

	groupMuteTable: {
		'PRODIGY.MC': [
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1', index: 0 },
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2', index: 1 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '1', chlabel: '1', index: 2 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '2', chlabel: '2', index: 3 },
			{ type: 'mutegrp', slotid: 'all', slotlabel: '', chid: 'slots', chlabel: 'All Slots', index: 4 },
		],
		'PRODIGY.MP': [
			{
				type: 'mutegrp',
				slotid: 'madi',
				slotlabel: 'Madi',
				slotlabelpath: '/settings/slot_name/8',
				chid: '1',
				chlabel: '1',
				index: 0,
			},
			{
				type: 'mutegrp',
				slotid: 'madi',
				slotlabel: 'Madi',
				slotlabelpath: '/settings/slot_name/9',
				chid: '2',
				chlabel: '2',
				index: 1,
			},
			{
				type: 'mutegrp',
				slotid: 'net',
				slotlabel: 'Net',
				slotlabelpath: '/settings/slot_name/10',
				chid: '1',
				chlabel: '1',
				index: 2,
			},
			{
				type: 'mutegrp',
				slotid: 'net',
				slotlabel: 'Net',
				slotlabelpath: '/settings/slot_name/11',
				chid: '2',
				chlabel: '2',
				index: 3,
			},
			{
				type: 'mutegrp',
				slotid: 'all',
				slotlabel: '',
				chid: 'slots',
				chlabel: 'All Slots',
				index: 4,
			},
		],
		'PRODIGY.MX': [
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1', index: 6 },
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2', index: 7 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '1', chlabel: '1', index: 0 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '2', chlabel: '2', index: 1 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '3', chlabel: '3', index: 2 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '4', chlabel: '4', index: 3 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '5', chlabel: '5', index: 4 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '6', chlabel: '6', index: 5 },
			{ type: 'mutegrp', slotid: 'dsp', slotlabel: '', chid: '', chlabel: 'DSP', index: 1001 },
			{ type: 'mutegrp', slotid: 'all', slotlabel: '', chid: '', chlabel: 'All', index: 1002 },
		],
		'MAVEN.A': [
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '1', chlabel: '1', index: 0 },
			{ type: 'mutegrp', slotid: 'madi', slotlabel: 'Madi', chid: '2', chlabel: '2', index: 1 },
			{ type: 'mutegrp', slotid: 'net', slotlabel: 'Net', chid: '1', chlabel: '1', index: 2 },
			{ type: 'mutegrp', slotid: 'all', slotlabel: '', chid: 'slots', chlabel: 'All Slots', index: 4 },
		],
	},

	monitoringSnkTable: {
		GENERIC: [
			{ type: 'snk', slotid: 'mon1', slotlabel: 'Monitoring Out', chid: '1', chlabel: 'Phones 1', index: 0 },
			{ type: 'snk', slotid: 'mon1', slotlabel: 'Monitoring Out', chid: '2', chlabel: 'Phones 2', index: 1 },
			{ type: 'snk', slotid: 'mon1', slotlabel: 'Monitoring Out', chid: '3', chlabel: 'Monitor 1', index: 2 },
			{ type: 'snk', slotid: 'mon1', slotlabel: 'Monitoring Out', chid: '4', chlabel: 'Monitor 2', index: 3 },
		],
	},

	monitoringSrcTable: {
		GENERIC: [
			{ type: 'src', slotid: 'mon1', slotlabel: 'Monitoring Bus', chid: '1', chlabel: 'Phones 1', index: 0 },
			{ type: 'src', slotid: 'mon1', slotlabel: 'Monitoring Bus', chid: '2', chlabel: 'Phones 2', index: 1 },
			{ type: 'src', slotid: 'mon1', slotlabel: 'Monitoring Bus', chid: '3', chlabel: 'Monitor 1', index: 2 },
			{ type: 'src', slotid: 'mon1', slotlabel: 'Monitoring Bus', chid: '4', chlabel: 'Monitor 2', index: 3 },
		],
	},
}

export const deviceTables: DeviceTable = {
	numSlots: {
		'PRODIGY.MC': 8,
		'PRODIGY.MP': 4,
		'PRODIGY.MX': 0,
		'MAVEN.A': 2,
	},
	numNet: {
		'PRODIGY.MC': 1,
		'PRODIGY.MP': 2,
		'PRODIGY.MX': 6,
		'MAVEN.A': 1,
	},
	numEqFIR: {
		'PRODIGY.MC': 0,
		'PRODIGY.MP': 32,
		'PRODIGY.MX': 0,
		'MAVEN.A': 16,
	},
	numEqIIR: {
		'PRODIGY.MC': 0,
		'PRODIGY.MP': 32,
		'PRODIGY.MX': 64,
		'MAVEN.A': 64,
	},
	numDelay: {
		'PRODIGY.MC': 0,
		'PRODIGY.MP': 32,
		'PRODIGY.MX': 64,
		'MAVEN.A': 64,
	},
	numCompressor: {
		'PRODIGY.MC': 0,
		'PRODIGY.MP': 32,
		'PRODIGY.MX': 64,
		'MAVEN.A': 64,
	},
	numGroups: {
		'PRODIGY.MC': 16,
		'PRODIGY.MP': 16,
		'PRODIGY.MX': 32,
		'MAVEN.A': 32,
	},
	numSumBus: {
		'PRODIGY.MC': 0,
		'PRODIGY.MP': 32,
		'PRODIGY.MX': 64,
		'MAVEN.A': 64,
	},
	noRecordPaths: {
		'PRODIGY.MC': [
			/^\/fan\/(?!silent|temp_thres)/,
			/^\/status/,
			/^\/device_info\/(?!name|front_panel_auto_lock|front_panel_lock_timeout)/,
			/^\/snapshots\/\d+\/(compliant|dataset|scopeset)/,
			/^\/ip_config\/(current_|mac)/,
			/^\/mirroring\/(scope|mirrors)/,
			/^\/licenses\/(?!active)/,
			/^\/settings\/net_status_tx_t\/\d+\/src_bypass/,
			/^\/settings\/madi_status_tx\/\d+\/src_bypass/,
			/^\/settings\/eq\/\d+\/custom_filter\/points/,
			/^\/settings\/group\/channel\/\d+\/fading_state/,
			/^\/last_snapshot_recalled/,
		],
		'PRODIGY.MP': [
			/^\/fan\/(?!silent|temp_thres)/,
			/^\/status/,
			/^\/device_info\/(?!name|front_panel_auto_lock|front_panel_lock_timeout)/,
			/^\/snapshots\/\d+\/(compliant|dataset|scopeset)/,
			/^\/ip_config\/(current_|mac)/,
			/^\/mirroring\/(scope|mirrors)/,
			/^\/licenses\/(?!active)/,
			/^\/settings\/net_status_tx_t\/\d+\/src_bypass/,
			/^\/settings\/madi_status_tx\/\d+\/src_bypass/,
			/^\/settings\/eq\/\d+\/custom_filter\/points/,
			/^\/settings\/group\/channel\/\d+\/fading_state/,
			/^\/last_snapshot_recalled/,
		],
		'PRODIGY.MX': [
			/^\/fan\/(?!silent|temp_thres)/,
			/^\/status/,
			/^\/device_info\/(?!name|front_panel_auto_lock|front_panel_lock_timeout)/,
			/^\/snapshots\/\d+\/(compliant|dataset|scopeset|settings)/,
			/^\/ip_config\/mac/,
			/^\/mirroring\/(scope|mirrors)/,
			/^\/licenses\/(?!active)/,
			/^\/settings\/net_status_tx_t\/\d+\/src_bypass/,
			/^\/settings\/madi_status_tx\/\d+\/src_bypass/,
			/^\/settings\/eq\/\d+\/custom_filter\/points/,
			/^\/settings\/group\/channel\/\d+\/fading_state/,
			/^\/last_snapshot_recalled/,
		],
		'MAVEN.A': [
			/^\/fan\/(?!silent|temp_thres)/,
			/^\/status/,
			/^\/device_info\/(?!name|front_panel_auto_lock|front_panel_lock_timeout)/,
			/^\/snapshots\/\d+\/(compliant|dataset|scopeset)/,
			/^\/ip_config\/(current_|mac)/,
			/^\/mirroring\/(scope|mirrors)/,
			/^\/licenses\/(?!active)/,
			/^\/settings\/net\/\d+\/src_bypass/,
			/^\/settings\/madi\/\d+\/src_bypass/,
			/^\/settings\/eq\/\d+\/custom_filter\/points/,
			/^\/settings\/group\/channel\/\d+\/fading_state/,
			/^\/last_snapshot_recalled/,
		],
	},
	matMixer: {
		'PRODIGY.MC': [],
		'PRODIGY.MP': [
			{ id: 'mtx1', label: 'MatMix 1', in: 16, out: 4, devId: 3, path: 'mixer/3' },
			{ id: 'mtx2', label: 'MatMix 2', in: 16, out: 4, devId: 7, path: 'mixer/7' },
			{ id: 'mtx3', label: 'MatMix 3', in: 16, out: 4, devId: 11, path: 'mixer/11' },
			{ id: 'mtx4', label: 'MatMix 4', in: 16, out: 4, devId: 15, path: 'mixer/15' },
			{ id: 'mtx5', label: 'MatMix 5', in: 16, out: 4, devId: 19, path: 'mixer/19' },
			{ id: 'mtx6', label: 'MatMix 6', in: 16, out: 4, devId: 23, path: 'mixer/23' },
			{ id: 'mtx7', label: 'MatMix 7', in: 16, out: 4, devId: 27, path: 'mixer/27' },
			{ id: 'mtx8', label: 'MatMix 8', in: 16, out: 4, devId: 31, path: 'mixer/31' },
			{ id: 'mtx9', label: 'MatMix 9', in: 8, out: 8, devId: 0, path: 'mixer/0' },
			{ id: 'mtx10', label: 'MatMix 10', in: 8, out: 8, devId: 4, path: 'mixer/4' },
			{ id: 'mtx11', label: 'MatMix 11', in: 8, out: 8, devId: 8, path: 'mixer/8' },
			{ id: 'mtx12', label: 'MatMix 12', in: 8, out: 8, devId: 12, path: 'mixer/12' },
			{ id: 'mtx13', label: 'MatMix 13', in: 8, out: 8, devId: 16, path: 'mixer/16' },
			{ id: 'mtx14', label: 'MatMix 14', in: 8, out: 8, devId: 20, path: 'mixer/20' },
			{ id: 'mtx15', label: 'MatMix 15', in: 8, out: 8, devId: 24, path: 'mixer/24' },
			{ id: 'mtx16', label: 'MatMix 16', in: 8, out: 8, devId: 28, path: 'mixer/28' },
		],
		'PRODIGY.MX': [{ id: 'mtx1', label: 'MatMix', in: 64, out: 64, devId: 0, path: 'mixer64x64' }],
		'MAVEN.A': [{ id: 'mtx1', label: 'MatMix', in: 64, out: 64, devId: 0, path: 'mixer64x64' }],
	},
	sumBusSources: {
		'PRODIGY.MC': [
			...Array.from({ length: 4 * 32 }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_madi${Math.floor(i / 64) + 1}_${(i % 64) + 1}`,
			})),
			...Array.from({ length: 1 * 4 * 32 }, (_, i, start = 4) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_net${Math.floor(i / 128) + 1}_${(i % 128) + 1}`,
			})),
			...Array.from({ length: 8 * 8 }, (_, i, start = 12) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_slot${Math.floor(i / 8) + 1}_${(i % 8) + 1}`,
			})),
			{ segment: 14, bit: 0, chId: 'src_gen_1' },
			{ segment: 14, bit: 2, chId: 'src_gen_3' },
			{ segment: 14, bit: 3, chId: 'src_gen_4' },
			{ segment: 14, bit: 4, chId: 'src_gen_5' },
			{ segment: 14, bit: 5, chId: 'src_gen_6' },
			{ segment: 14, bit: 6, chId: 'src_gen_7' },
			{ segment: 14, bit: 7, chId: 'src_gen_8' },
		],
		'PRODIGY.MP': [
			...Array.from({ length: 4 * 32 }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_madi${Math.floor(i / 64) + 1}_${(i % 64) + 1}`,
			})),
			...Array.from({ length: 2 * 4 * 32 }, (_, i, start = 4) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_net${Math.floor(i / 128) + 1}_${(i % 128) + 1}`,
			})),
			...Array.from({ length: 4 * 8 }, (_, i, start = 12) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_slot${Math.floor(i / 8) + 1}_${(i % 8) + 1}`,
			})),
			...Array.from({ length: 1 * 32 }, (_, i, start = 15) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_inmng${Math.floor(i / 32) + 1}_${(i % 32) + 1}`,
			})),
			...Array.from({ length: 32 * PICKOFFNUM }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_flexch1_${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
			})),
			...Array.from({ length: 8 * 4 * PICKOFFNUM }, (_, i, start = 16) => {
				const totalBitsPerMTX = 4 * PICKOFFNUM
				const mtx = Math.floor(i / totalBitsPerMTX)
				const rest = i % totalBitsPerMTX
				const ch = Math.floor(rest / PICKOFFNUM)
				const pickoff = rest % PICKOFFNUM

				// Compute bit index with gaps:
				const startBit = (mtx * 4 + 3) * 8 * PICKOFFNUM
				const withinMtxBit = ch * PICKOFFNUM + pickoff
				const bitIndex = startBit + withinMtxBit

				const segment = Math.floor(bitIndex / 32) + start
				const bit = bitIndex % 32

				const chId = `srcdsp_mtx${mtx + 1}_${ch + 1}p${pickoff + 1}`

				return { segment, bit, chId }
			}),
			...Array.from({ length: 8 * 8 * PICKOFFNUM }, (_, i, start = 16) => {
				const totalBitsPerMTX = 8 * PICKOFFNUM
				const mtx = Math.floor(i / totalBitsPerMTX)
				const rest = i % totalBitsPerMTX
				const ch = Math.floor(rest / PICKOFFNUM)
				const pickoff = rest % PICKOFFNUM

				// Compute bit index with gaps:
				const startBit = mtx * 4 * 8 * PICKOFFNUM
				const withinMtxBit = ch * PICKOFFNUM + pickoff
				const bitIndex = startBit + withinMtxBit

				const segment = Math.floor(bitIndex / 32) + start
				const bit = bitIndex % 32

				const chId = `srcdsp_mtx${mtx + 9}_${ch + 1}p${pickoff + 1}`

				return { segment, bit, chId }
			}),
			{ segment: 14, bit: 0, chId: 'src_gen_1' },
			{ segment: 14, bit: 2, chId: 'src_gen_3' },
			{ segment: 14, bit: 3, chId: 'src_gen_4' },
			{ segment: 14, bit: 4, chId: 'src_gen_5' },
			{ segment: 14, bit: 5, chId: 'src_gen_6' },
			{ segment: 14, bit: 6, chId: 'src_gen_7' },
			{ segment: 14, bit: 7, chId: 'src_gen_8' },
		],
		'PRODIGY.MX': [
			...Array.from({ length: 6 * 4 * 32 }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_net${Math.floor(i / 128) + 1}_${(i % 128) + 1}`,
			})),
			...Array.from({ length: 4 * 32 }, (_, i, start = 48) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_madi${Math.floor(i / 64) + 1}_${(i % 64) + 1}`,
			})),
			...Array.from({ length: 64 }, (_, i, start = 30) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_inmng${Math.floor(i / 64) + 1}_${(i % 64) + 1}`,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i, start = 10) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_flexch1_${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_mtx1_${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
			})),
			{ segment: 52, bit: 0, chId: 'src_gen_1' },
			{ segment: 52, bit: 2, chId: 'src_gen_3' },
			{ segment: 52, bit: 3, chId: 'src_gen_4' },
			{ segment: 52, bit: 4, chId: 'src_gen_5' },
			{ segment: 52, bit: 5, chId: 'src_gen_6' },
			{ segment: 52, bit: 6, chId: 'src_gen_7' },
			{ segment: 52, bit: 7, chId: 'src_gen_8' },
		],
		'MAVEN.A': [
			...Array.from({ length: 1 * 256 }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_net${Math.floor(i / 256) + 1}_${(i % 256) + 1}`,
			})),
			...Array.from({ length: 4 * 32 }, (_, i, start = 16) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_madi${Math.floor(i / 64) + 1}_${(i % 64) + 1}`,
			})),
			...Array.from({ length: 2 * 8 }, (_, i, start = 24) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `src_slot${Math.floor(i / 8) + 1}_${(i % 8) + 1}`,
			})),
			...Array.from({ length: 2 * 32 }, (_, i, start = 30) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_inmng${Math.floor(i / 32) + 1}_${(i % 32) + 1}`,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i, start = 0) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_flexch1_${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
			})),
			...Array.from({ length: 64 * PICKOFFNUM }, (_, i, start = 10) => ({
				segment: start + Math.floor(i / 32),
				bit: i % 32,
				chId: `srcdsp_mtx1_${Math.floor(i / PICKOFFNUM) + 1}p${(i % PICKOFFNUM) + 1}`,
			})),
			{ segment: 25, bit: 0, chId: 'src_gen_1' },
			{ segment: 25, bit: 2, chId: 'src_gen_3' },
			{ segment: 25, bit: 3, chId: 'src_gen_4' },
			{ segment: 25, bit: 4, chId: 'src_gen_5' },
			{ segment: 25, bit: 5, chId: 'src_gen_6' },
			{ segment: 25, bit: 6, chId: 'src_gen_7' },
			{ segment: 25, bit: 7, chId: 'src_gen_8' },
		],
	},
}

export const choices = {
	ears: {
		GENERIC: [],
		'PRODIGY.MC': [
			{ label: 'Madi 1 Input Port', id: 0 },
			{ label: 'Madi 2 Input Port', id: 1 },
			{ label: 'Net 1 A Input Port', id: 2 },
			{ label: 'Net 1 B Input Port', id: 3 },
			{ label: 'Net 2 A Input Port', id: 4 },
			{ label: 'Net 2 B Input Port', id: 5 },
		],
		'PRODIGY.MP': [],
		'PRODIGY.MX': [],
		'MAVEN.A': [],
	},
	template: {
		GENERIC: [],
		'PRODIGY.MC': [],
		'PRODIGY.MP': [],
		'PRODIGY.MX': [],
		'MAVEN.A': [],
	},
}
//{ label: '', id: },
